@model BiotLabWeb.Models.BioterioViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BioterioViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Cep" class="control-label"></label>
                <input asp-for="Cep" class="form-control" id="cepInput" />
                <span asp-validation-for="Cep" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Rua" class="control-label"></label>
                <input asp-for="Rua" class="form-control" id="ruaInput" />
                <span asp-validation-for="Rua" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Bairro" class="control-label"></label>
                <input asp-for="Bairro" class="form-control" id="bairroInput" />
                <span asp-validation-for="Bairro" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Cidade" class="control-label"></label>
                <input asp-for="Cidade" class="form-control" id="cidadeInput" />
                <span asp-validation-for="Cidade" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Numero" class="control-label"></label>
                <input asp-for="Numero" class="form-control" />
                <span asp-validation-for="Numero" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Complemento" class="control-label"></label>
                <input asp-for="Complemento" class="form-control" />
                <span asp-validation-for="Complemento" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Estado" class="control-label"></label>
                <input asp-for="Estado" class="form-control" id="estadoInput" />
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Telefone1" class="control-label"></label>
                <input asp-for="Telefone1" class="form-control" />
                <span asp-validation-for="Telefone1" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Telefone2" class="control-label"></label>
                <input asp-for="Telefone2" class="form-control" />
                <span asp-validation-for="Telefone2" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('cepInput').addEventListener('change', function() {
            var cep = this.value.trim();

            // Remove o hífen para garantir um formato correto para o serviço de busca
            if (cep.length == 9 && cep[5] === '-') {
                cep = cep.replace('-', '');
            }

            // Valida se o CEP possui 8 dígitos para realizar a consulta
            if (cep.length == 8) {
                fetch('https://viacep.com.br/ws/' + cep + '/json/')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Erro na busca do CEP');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (!data.erro) {
                            document.getElementById('cidadeInput').value = data.localidade;
                            document.getElementById('bairroInput').value = data.bairro;
                            document.getElementById('estadoInput').value = data.uf;
                            document.getElementById('ruaInput').value = data.logradouro;
                        } else {
                            alert("CEP não encontrado.");
                        }
                    })
                    .catch(error => {
                        console.error("Erro ao buscar o CEP:", error);
                    });
            } else {
                alert("Por favor, insira um CEP válido.");
            }
        });
    </script>
}

}
